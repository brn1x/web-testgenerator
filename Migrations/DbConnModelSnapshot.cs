// <auto-generated />
using System;
using GeradorDeProvas.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GeradorDeProvas.Migrations
{
    [DbContext(typeof(DbConn))]
    partial class DbConnModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Alternative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("QuestionId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Alternatives");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.PeriodStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PeriodId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StudentId");

                    b.ToTable("PeriodStudents");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.PeriodSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PeriodId");

                    b.Property<int?>("SubjectId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("SubjectId");

                    b.ToTable("PeriodSubjects");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CorrectAnswer");

                    b.Property<int?>("SubjectId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<int?>("PeriodId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StudentId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.TestQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("QuestionId");

                    b.Property<int?>("TestId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("TestId");

                    b.ToTable("TestQuestions");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Alternative", b =>
                {
                    b.HasOne("GeradorDeProvas.Models.Entity.Question")
                        .WithMany("Alternatives")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.PeriodStudent", b =>
                {
                    b.HasOne("GeradorDeProvas.Models.Entity.Period", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId");

                    b.HasOne("GeradorDeProvas.Models.Entity.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.PeriodSubject", b =>
                {
                    b.HasOne("GeradorDeProvas.Models.Entity.Period", "Period")
                        .WithMany("PeriodSubjects")
                        .HasForeignKey("PeriodId");

                    b.HasOne("GeradorDeProvas.Models.Entity.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Question", b =>
                {
                    b.HasOne("GeradorDeProvas.Models.Entity.Subject", "Subject")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.Test", b =>
                {
                    b.HasOne("GeradorDeProvas.Models.Entity.Period", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId");

                    b.HasOne("GeradorDeProvas.Models.Entity.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("GeradorDeProvas.Models.Entity.TestQuestion", b =>
                {
                    b.HasOne("GeradorDeProvas.Models.Entity.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("GeradorDeProvas.Models.Entity.Test", "Test")
                        .WithMany("TestQuestions")
                        .HasForeignKey("TestId");
                });
#pragma warning restore 612, 618
        }
    }
}
